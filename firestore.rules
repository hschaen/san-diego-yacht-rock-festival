rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read access to content for everyone
    match /content/{document=**} {
      allow read: if true;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Allow read/write access to content_versions for admins only
    match /content_versions/{document=**} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Allow read/write access to admins collection for authenticated admins
    match /admins/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && 
        (request.auth.uid == userId || 
         exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
    }
    
    // Allow anyone to create registrations (for the signup form)
    // Allow admins to read, update, and delete registrations
    match /registrations/{document=**} {
      // Admins can read, update, and delete
      allow read, update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
      
      // Anyone can create a registration with proper data
      allow create: if request.resource.data.keys().hasAll(['name', 'email', 'phone', 'timestamp']) &&
                       request.resource.data.name is string &&
                       request.resource.data.email is string &&
                       request.resource.data.email.size() > 0 &&
                       request.resource.data.phone is string &&
                       request.resource.data.timestamp is timestamp;
    }
  }
}